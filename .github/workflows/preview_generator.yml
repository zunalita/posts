name: Posts Preview & Deploy to GitHub Pages

on:
  push:
    paths:
      - 'posts/**'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'posts/**'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Clone zunalita.github.io source
        run: |
          git clone https://github.com/zunalita/zunalita.github.io.git site

      - name: Copy posts to site/_posts
        run: |
          mkdir -p site/_posts
          cp posts/*.md site/_posts/ || true

      - name: Validate Front Matter
        run: |
          fail=0
          for file in site/_posts/*.md; do
            echo "Checking $file"
            if ! awk '/^---/{c++} END{exit !(c>=2)}' "$file"; then
              echo "::error file=$file::Missing front matter block"
              fail=1
              continue
            fi
            if ! grep -q '^title:' "$file"; then
              echo "::error file=$file::Missing 'title' field"
              fail=1
            fi
            if ! grep -q '^date:' "$file"; then
              echo "::error file=$file::Missing 'date' field"
              fail=1
            fi
          done
          exit $fail

      - name: Add html-proofer
        run: |
          cd site
          echo "" >> Gemfile
          echo "gem 'html-proofer'" >> Gemfile

      - name: Install site dependencies
        run: |
          cd site
          bundle install

      - name: Build Jekyll site
        run: |
          cd site
          bundle exec jekyll build --verbose

      - name: Run HTML Proofer
        run: |
          cd site
          bundle exec htmlproofer ./_site --allow-hash-href --disable-external

      - name: Prepare Preview Folder
        run: |
          mkdir -p preview_site
          cp -r site/_site/posts preview_site/
          cp -r site/_site/assets preview_site/ || true

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./preview_site

      - name: Deploy to GitHub Pages
        uses: actions/configure-pages@v2

      - name: Comment PR with Preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const user = context.repo.owner;
            const repo = context.repo.repo;
            const url = `https://${user}.github.io/${repo}/preview/latest/`;
            await github.rest.issues.createComment({
              issue_number: prNumber,
              owner: user,
              repo: repo,
              body: `Generated preview: ${url}`
            });
