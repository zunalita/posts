name: Validate Jekyll Post

on:
  pull_request:
    paths:
      - 'posts/**'

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
          bundler-cache: true

      - name: Clone Jekyll Site Repository
        run: |
          git clone https://github.com/zunalita/zunalita.github.io.git site

      - name: Get latest edited post file from PR
        id: get_latest_post
        run: |
          FILE=$(git diff --name-only origin/main...HEAD -- 'posts/*.md' | tail -n1)
          echo "edited_post=$FILE" >> $GITHUB_OUTPUT

      - name: Copy edited post to Jekyll site _posts folder
        run: |
          mkdir -p site/_posts
          cp "${{ steps.get_latest_post.outputs.edited_post }}" site/_posts/

      - name: Validate front matter in the edited post
        run: |
          file="site/_posts/$(basename "${{ steps.get_latest_post.outputs.edited_post }}")"
          echo "Checking front matter for $file"
          fail=0
          if ! awk '/^---/{c++} END{exit !(c>=2)}' "$file"; then
            echo "::error file=$file::Missing front matter block"
            fail=1
          fi
          if ! grep -q '^title:' "$file"; then
            echo "::error file=$file::Missing 'title' field"
            fail=1
          fi
          if ! grep -q '^date:' "$file"; then
            echo "::error file=$file::Missing 'date' field"
            fail=1
          fi
          exit $fail

      - name: Install Jekyll dependencies
        run: |
          cd site
          bundle install

      - name: Build Jekyll site with localhost URL
        run: |
          cd site
          bundle exec jekyll build --url http://localhost --baseurl ""

      - name: Run HTML Proofer
        uses: anishathalye/proof-html@v1.1.0
        with:
          directory: './site/_site'
          check_html: true
          check_img_http: true
          enforce_https: true

      - name: Run Markdown Lint (optional)
        run: |
          npx markdownlint-cli2 "site/_posts/$(basename "${{ steps.get_latest_post.outputs.edited_post }}")" || true
